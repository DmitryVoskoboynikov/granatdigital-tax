Авторизация
-----------

При работе с API, каждый запрос должен сопроваждаться авторизационным токеном. 

**Время жизни токена** - `params['userTokenTTL']` минут **бездействия**. 
Токен продлевает жизнь на `params['userTokenTTL']` при каждом удачном запросе к системе.

Токен можно получить, пройдя процедуру авторизации:

> **POST** http://domain.com/api/authentication

####Ожидаемые параметры:

| Имя | Тип | Требуется | Описание |
|---|---|---|---|
| login | string | * | Login указанный при регистрации. |
| password | string | * | Password указанный при регистрации.  |

####Пример запроса:

> Raw POST Raw

            {
                "login": "user",
                "password": "123123"
            }

####Успешный ответ:

> HTTP CODE: 200

    { 
        "7086566184b8c63ed3d847d9e444bd63d17b4bb0" 
    }

#### Работа с токеном

Полученный токен следует отправлять в каждом запросе к API
Отправка осуществляется через дополнительный header (`apiKey`) запроса

####Пример заголовка:

    apiKey: "7086566184b8c63ed3d847d9e444bd63d17b4bb0" 

### Проверка apiKey

Что бы проверить жив ли токен или продлить его жизнь в случае бездействия клиента, нужно отправить GET запрос с header (`apiKey`)

>**GET** http://domain.com/api/server/api-key/check

####Пример заголовка:

    apiKey: "7086566184b8c63ed3d847d9e444bd63d17b4bb0" 

В случае, если токен умер, ответом будет код 403, с текстом Forbidden

####Успешный ответ:

> HTTP CODE: 200

    { 
        true 
    }
